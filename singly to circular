#include <stdio.h>
#include <stdlib.h>
struct node {
    int data;
    struct node *next;
};
struct node *head = NULL;
void create() {
    int ele;
    struct node *tmpcell, *ptr;
    tmpcell = (struct node *)malloc(sizeof(struct node));
    if (tmpcell == NULL) {
        printf("Memory is not allocated\n");
        exit(0);
    } else {
        printf("Enter element: ");
        scanf("%d", &ele);
        tmpcell->data = ele;
        tmpcell->next = NULL;
    }
    if (head == NULL) {
        head = tmpcell;
    } else {
        ptr = head;
        while (ptr->next != NULL) {
            ptr = ptr->next;
        }
        ptr->next = tmpcell;
    }
}

void display() {
    struct node *ptr;
    if (head == NULL) {
        printf("List is empty\n");
    } else {
        printf("The List elements are:\n");
        ptr = head;
        struct node*start=head;
        do {
            printf("%d ", ptr->data);
            ptr = ptr->next;
        }
        while(ptr!=NULL&& ptr!=start);
        printf("\n");
    }
}

void convertToCircular() {
    struct node *ptr;
    if (head == NULL) {
        return; 
    }
    ptr = head;
    while (ptr->next != NULL) {
        ptr = ptr->next;
    }
    ptr->next = head; 
}

int main() {
    int ch;
    printf("Main menu\n");
    printf("1. Create\n2. Display\n3. Convert to Circular\n4. Exit\n");
    while (1) {
        printf("Enter the choice: ");
        scanf("%d", &ch);
        switch (ch) {
            case 1:
                create();
                break;
            case 2:
                display();
                break;
            case 3:
                convertToCircular();
                break;
            case 4:
                exit(0);
            default:
                printf("Invalid choice\n");
        }
    }
    return 0;
}
